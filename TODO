Swift Mailer SE:
----------------

 * Add a getHeader() method.
 * Caching!
 * Write some sanity tests
 * Message class
   - Message/Partial
   - Message/external
 * CharacterReaderFactory (map charsets to CharacterReaders).
   - Big5
   - Shift-JIS
   - ISO-10646
   - CP950
 * Streams
   - FileByteStream (implements FileStream)
   - FileCharacterStream
 * Caches
   - NullCache
   - FileCache

Swift Mailer EE:
----------------

 * DKIM/Domain Keys
 * PKCS signed messages
 * XML representations of messages
   - toXml() in the entities
   - createFromXml() in a factory
 * MimeFactory
   - createFromString()
   - createFromXml()
 * Direct MX Transport
   - By-pass using a single SMTP server as a relay
   - Group recipients by domain for efficiency
 * Advanced Content-Type support (already "supported" in community version but will add wrapper code)
   - multipart/digest, message/external, message/partial
 * Message forwarding
 * REST architecture, coupled with the XML representation of emails to delegate sending large batches
   around a cluster of hosts
 * HttpDocument representation of multipart mime documents (for sending multipart data over HTTP).

Test Suite:
-----------

 * Change test results bar to show actual number of tests running
 * Add a thin bar showing the percentage progress below the results bar
 * Some easy way to disable the JS
 * Smoke Test abilities.  Pretty much just needs to be able to display images.
   - Define a markup? {image @ http://swiftmailer.org/testing/4.0.1/smokes/basic.png}
 
EoM
